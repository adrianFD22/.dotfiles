#!/bin/python

# A python script for managing daily notes.
# Usage: simple-notes []

import csv
from os import path
import argparse
from datetime import datetime

config_dir = "/home/adrian/.config/simple-notes/"

# --------------------------------------
#                 Utils
# --------------------------------------

# Get options
def get_options():
    with open(config_dir + "config.csv", "r", newline='') as csvfile:
        spamreader = csv.reader(csvfile)
        options = spamreader.__next__()
    return options

# Get punctual events of some date
def get_punctual_events():
    pass

# Get cyclic events
def get_cyclic_events():
    pass


# --------------------------------------
#                  API
# --------------------------------------

# Get the name of the daily note and init it if does not exist
def get_daily_note():
    # Get options
    notes_dir, profile = get_options()
    today              = datetime.now()

    # Get note name
    note_path = notes_dir + "/" + str(today.date()) + ".md"

    # Create note if does not exist
    if not path.isfile(note_path):
        # Get template
        template_path = config_dir + profile + "/" + str(today.weekday()) + ".md"

        with open(template_path, 'r') as f:
            note_content = f.read()
        pass

        note_content = "# Schedule\n\n" + note_content
        today_events = []

        # Get cyclic events
        with open(notes_dir + '/' + 'cyclic_events.csv', 'r') as f:
            base_date    = datetime(1900, 1, 1)
            today_number = (today - base_date).days

            spamreader = csv.reader(f)
            for row in spamreader:
                modulus = int(row[0])
                coset   = int(row[1])
                event   = row[2]

                today_coset = today_number % modulus

                if today_coset == coset:
                    today_events.append(event)

        # Get punctual events
        with open(notes_dir + '/' + 'punctual_events.csv', 'r') as f:
            not_today_events = []

            spamreader = csv.reader(f)
            for row in spamreader:
                event_date = row[0]
                event      = row[1]

                if str(today) == event_date:
                    today_events.append(event)
                elif str(today) > event_date:
                    today_events.append(event_date + ": " + event.lstrip())
                else:
                    not_today_events.append(row)

        # Update punctual events
        with open(notes_dir + '/' + 'punctual_events.csv', 'w') as f:
            spamwriter = csv.writer(f)
            for row in not_today_events:
                spamwriter.writerow(row)

        # Add today s events list to string template
        if len(today_events) != 0:
            events_content = "# Events\n"
            for event in today_events:
                events_content = events_content + "- [ ] " + event.lstrip() + "\n"

            events_content = events_content + "\n"
            note_content = events_content + note_content

        with open(note_path, 'w') as f:
            f.write(note_content)

    return note_path

def get_calendar():
    pass

def set_profile(profile):
    notes_dir, _ = get_options()

    with open(config_dir + "config.csv", 'w') as f:
        f.write(notes_dir + ", " + profile)


# --------------------------------------
#                 Main
# --------------------------------------

# Parse options
#parser = argparse.ArgumentParser(
                    #prog='simple-notes',
                    #description='Manage daily notes',
                    #epilog='')
#group = parser.add_mutually_exclusive_group(required=True)
#group.add_argument('--get', nargs=1)
#group.add_argument('--set', nargs=2)

print(get_daily_note())
